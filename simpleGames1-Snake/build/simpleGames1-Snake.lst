         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w __syscall_lock_close_recursive
         w userAppExit
         w userAppInit
00000000 b _TLS_MODULE_BASE_
00000000 00000802 B __ctru_dev_utf16_buf
00000000 a shift
00000000 a shift
00000804 00000401 B __ctru_dev_path_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac t .udivsi3_skip_div0_test
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc T __aeabi_ldivmod
00100990 00000014 T __restore_core_regs
00100990 00000014 T restore_core_regs
001009a4 T __gnu_Unwind_Restore_VFP
001009ac T __gnu_Unwind_Save_VFP
001009b4 T __gnu_Unwind_Restore_VFP_D
001009bc T __gnu_Unwind_Save_VFP_D
001009c4 T __gnu_Unwind_Restore_VFP_D_16_to_31
001009cc T __gnu_Unwind_Save_VFP_D_16_to_31
001009d4 T __gnu_Unwind_Restore_WMMXD
00100a18 T __gnu_Unwind_Save_WMMXD
00100a5c T __gnu_Unwind_Restore_WMMXC
00100a70 T __gnu_Unwind_Save_WMMXC
00100a84 00000024 T _Unwind_RaiseException
00100a84 00000024 T ___Unwind_RaiseException
00100aa8 00000024 T _Unwind_Resume
00100aa8 00000024 T ___Unwind_Resume
00100acc 00000024 T _Unwind_Resume_or_Rethrow
00100acc 00000024 T ___Unwind_Resume_or_Rethrow
00100af0 00000024 T _Unwind_ForcedUnwind
00100af0 00000024 T ___Unwind_ForcedUnwind
00100b14 00000024 T _Unwind_Backtrace
00100b14 00000024 T ___Unwind_Backtrace
00100b48 00000390 T strcmp
00100ed0 t __do_global_dtors_aux
00100f10 t frame_dummy
00100f3c 00000060 t C2D_SpriteSetScale
00100f9c 00000018 t C2D_SceneTarget
00100fb4 00000020 t C2D_SceneBegin
00100fd4 00000018 t C2D_DrawSprite
00100fec 00000018 t C2D_DrawRectSolid
00101004 00000070 t C2D_SpriteFromSheet
00101074 0000007c t initSprites()
001010f0 000000e8 t initText()
001011d8 00000020 T exitTheGame()
001011f8 000000bc T isScreenButtonPressed(int, int, int, int)
001012b4 00000088 T pauseTheGame(C3D_RenderTarget_tag*, C3D_RenderTarget_tag*)
0010133c 000003ac T showTheScoreBoard(C3D_RenderTarget_tag*, C3D_RenderTarget_tag*)
001016e8 000007a4 T showOptions(C3D_RenderTarget_tag*, C3D_RenderTarget_tag*)
00101e8c 00000030 W void std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>(std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> >*)
00101ebc 0000002c W std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector()
00101ebc 0000002c W std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector()
00101ee8 00000088 W std::vector<int, std::allocator<int> >::_M_check_len(unsigned int, char const*) const
00101f70 00000014 W void std::__advance<std::vector<int, std::allocator<int> > const*, int>(std::vector<int, std::allocator<int> > const*&, int, std::random_access_iterator_tag)
00101f84 000000c4 W std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
00102048 00000028 W std::__new_allocator<int>::allocate(unsigned int, void const*)
00102070 000000c4 W void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
00102134 0000003c W void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
00102170 0000006c W void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag)
001021dc 00000038 W std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&)
001021dc 00000038 W std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&)
00102214 0000003c W std::__new_allocator<std::vector<int, std::allocator<int> > >::allocate(unsigned int, void const*)
00102250 00000044 W std::vector<int, std::allocator<int> >* std::__relocate_a_1<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> >*, std::allocator<std::vector<int, std::allocator<int> > > >(std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> >*, std::allocator<std::vector<int, std::allocator<int> > >&)
00102294 000000d0 W void std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_realloc_insert<std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> >*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >&&)
00102364 00000058 W void std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::emplace_back<std::vector<int, std::allocator<int> > >(std::vector<int, std::allocator<int> >&&)
001023bc 0000002c W int* std::copy<int*, int*>(int*, int*, int*)
001023e8 00000038 W std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned int)
00102420 00000004 W int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
00102424 00000004 W int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
00102428 0000001c W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*)
00102444 00000054 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
00102498 0000000c W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
001024a4 00000040 W int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
001024e4 0000000c W int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
001024f0 0000000c W int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
001024fc 00000040 W int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0010253c 000000c8 W std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
00102604 00000058 W std::vector<int, std::allocator<int> >* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> >*>(std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> >*)
0010265c 0000004c W std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0010265c 0000004c W std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
001026a8 00000038 W std::vector<int, std::allocator<int> >* std::__do_uninit_copy<std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> >*>(std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> >*)
001026e0 00000040 W std::vector<int, std::allocator<int> >* std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate_and_copy<std::vector<int, std::allocator<int> > const*>(unsigned int, std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> > const*)
00102720 00000134 W void std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_assign_aux<std::vector<int, std::allocator<int> > const*>(std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> > const*, std::forward_iterator_tag)
00102854 00000200 T restartTheGame()
00102a54 00000218 T handleGamepadInput(C3D_RenderTarget_tag*, C3D_RenderTarget_tag*, double)
00102c6c 00000144 T handleScreenInput(C3D_RenderTarget_tag*, C3D_RenderTarget_tag*)
00102db0 00000fd4 T main
00103d84 00000080 W void std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_range_initialize<std::vector<int, std::allocator<int> > const*>(std::vector<int, std::allocator<int> > const*, std::vector<int, std::allocator<int> > const*, std::forward_iterator_tag)
00103e04 0000003c W std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector(std::initializer_list<std::vector<int, std::allocator<int> > >, std::allocator<std::vector<int, std::allocator<int> > > const&)
00103e04 0000003c W std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector(std::initializer_list<std::vector<int, std::allocator<int> > >, std::allocator<std::vector<int, std::allocator<int> > > const&)
00103e40 00000278 t __static_initialization_and_destruction_0(int, int)
001040b8 00000018 t _GLOBAL__sub_I_begin
001040d0 00000018 t _GLOBAL__sub_D_begin
001040e8 00000044 t C2Di_FrameEndHook
00104130 0000036c T C2D_Init
0010449c 0000004c T C2D_Fini
001044e8 000000b8 T C2D_Prepare
001045a0 00000048 T C2D_Flush
001045e8 00000104 T C2D_SceneSize
001046ec 00000058 T C2D_CreateScreenTarget
00104744 00000064 T C2D_TargetClear
001047a8 0000013c T C2Di_CalcQuad
001048e4 00000058 T C2Di_AppendQuad
0010493c 00000040 T C2Di_AppendVtx
0010497c 00000550 T C2Di_Update
00104ecc 000002b0 T C2D_DrawImage
0010517c 00000158 T C2D_DrawRectangle
001052d4 00000018 t C2Di_GlyphComp
001052ec 00000140 t C2Di_CalcLineWidths
0010542c 000001dc T C2D_TextBufNew
00105608 0000000c T C2D_TextBufClear
00105614 000001c8 T C2D_TextFontParseLine
001057dc 000000a8 T C2D_TextFontParse
00105884 00000014 T C2D_TextParse
00105898 00000030 T C2D_TextOptimize
001058c8 00000f6c T C2D_DrawText
00106834 0000006c T C2D_SpriteSheetLoadFromHandle
001068a0 00000048 T C2D_SpriteSheetLoad
001068e8 0000002c T C2D_SpriteSheetGetImage
00106914 00000044 T C2D_FontGlyphIndexFromCodePoint
00106958 00000078 T C2D_FontCalcGlyphPos
001069d0 00000004 W C3Di_LightEnvUpdate
001069d4 00000004 W C3Di_LightEnvDirty
001069d8 000000b4 t C3Di_AptEventHook
00106a8c 00000004 W C3Di_GasUpdate
00106a90 000001e0 T C3D_Init
00106c70 00000098 T C3D_SetViewport
00106d08 000004e8 T C3Di_UpdateContext
001071f0 000000e0 T C3Di_SplitFrame
001072d0 00000044 T C3D_Fini
00107314 00000114 T C3D_BindProgram
00107428 0000004c t onVBlank0
00107474 0000004c t onVBlank1
001074c0 00000080 t C3Di_RenderTargetDestroy
00107540 000000f4 t onQueueFinish
00107634 00000038 T C3Di_RenderQueueEnableVBlank
0010766c 00000030 T C3Di_RenderQueueDisableVBlank
0010769c 00000060 T C3Di_RenderQueueInit
001076fc 000000b0 T C3Di_RenderQueueExit
001077ac 00000034 T C3Di_RenderQueueWaitDone
001077e0 000000e4 T C3D_FrameBegin
001078c4 00000048 T C3D_FrameDrawOn
0010790c 00000058 T C3D_FrameSplit
00107964 000001d8 T C3D_FrameEnd
00107b3c 0000001c T C3D_FrameEndHook
00107b58 00000184 T C3D_RenderTargetCreate
00107cdc 000000a8 T C3D_RenderTargetSetOutput
00107d84 000000fc T C3D_SyncTextureCopy
00107e80 00000294 T C3D_TexInitWithParams
00108114 000000c8 T C3D_TexLoadImage
001081dc 00000044 T C3D_TexBind
00108220 00000074 T C3D_TexDelete
00108294 0000016c T C3Di_SetTex
00108400 000003f4 t Tex3DSi_ImportCommon
001087f4 00000038 T Tex3DS_TextureImportStdio
0010882c 0000001c T Tex3DS_GetSubTexture
00108848 0000001c T C3D_CalcColorBufSize
00108864 0000001c T C3D_CalcDepthBufSize
00108880 00000044 T C3D_SetFrameBuf
001088c4 0000016c T C3Di_FrameBufBind
00108a30 000000c8 T C3D_FrameBufClear
00108af8 00000044 T C3D_FrameBufTransfer
00108b3c 00000034 T C3D_GetTexEnv
00108b70 00000024 T C3Di_TexEnvBind
00108b94 00000218 T C3D_DrawElements
00108dac 00000070 T C3D_ProcTexInit
00108e1c 00000054 T C3D_ProcTexBind
00108e70 0000005c T C3D_ProcTexLutBind
00108ecc 000000a4 T ProcTexLut_FromArray
00108f70 0000017c T C3Di_ProcTexUpdate
001090ec 00000068 T C3Di_ProcTexDirty
00109154 00000024 T BufInfo_Init
00109178 00000080 T BufInfo_Add
001091f8 00000040 T C3D_SetBufInfo
00109238 00000048 T C3Di_BufInfoBind
00109280 00000040 T C3D_DepthMap
001092c0 0000001c T C3D_CullFace
001092dc 00000040 T C3D_StencilTest
0010931c 00000024 T C3D_StencilOp
00109340 0000001c T C3D_BlendingColor
0010935c 00000024 T C3D_EarlyDepthTest
00109380 0000002c T C3D_DepthTest
001093ac 0000002c T C3D_AlphaTest
001093d8 00000050 T C3D_AlphaBlend
00109428 00000030 T C3D_FragOpMode
00109458 00000044 T C3D_FragOpShadow
0010949c 000001ac T C3Di_EffectBind
00109648 00000028 T AttrInfo_Init
00109670 00000094 T AttrInfo_AddLoader
00109704 00000054 T C3D_SetAttrInfo
00109758 00000080 T C3Di_AttrInfoBind
001097d8 000000a8 T C3D_ImmSendAttrib
00109880 00000280 T C3D_UpdateUniforms
00109b00 000000c0 T C3Di_DirtyUniforms
00109bc0 000000d8 T C3Di_LoadShaderUniforms
00109c98 00000028 T C3Di_ClearShaderUniforms
00109cc0 000000cc T Mtx_Ortho
00109d8c 000000cc T Mtx_OrthoTilt
00109e58 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00109e7c 00000004 t addrMapNodeDestructor(rbtree_node*)
00109e80 00000250 T vramMemAlignAt
0010a0d0 0000000c T vramAlloc
0010a0dc 0000000c T vramAllocAt
0010a0e8 00000090 T vramFree
0010a178 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0010a19c 00000004 t addrMapNodeDestructor(rbtree_node*)
0010a1a0 00000120 T linearMemAlign
0010a2c0 00000008 T linearAlloc
0010a2c8 0000005c T linearFree
0010a324 00000080 T MemPool::CoalesceRight(MemBlock*)
0010a3a4 0000016c T MemPool::Allocate(MemChunk&, unsigned long, int)
0010a510 000000fc T MemPool::Deallocate(MemChunk const&)
0010a60c 00000030 T MemPool::GetFreeSpace()
0010a63c 00000008 t romfs_close
0010a644 000000c0 t romfs_seek
0010a704 00000024 t romfs_dirreset
0010a728 000000c8 t fill_dir
0010a7f0 0000028c t romfs_dirnext
0010aa7c 00000084 t romfs_free
0010ab00 000000d4 t searchForFile.constprop.0
0010abd4 000000d8 t searchForDir.constprop.0
0010acac 000001c0 t navigateToDir.constprop.0
0010ae6c 0000010c t romfs_open
0010af78 0000004c t romfs_chdir
0010afc4 00000070 t romfs_diropen
0010b034 00000174 t romfs_stat
0010b1a8 00000008 t romfs_dirclose
0010b1b0 00000084 t romfs_fstat
0010b234 000000d0 t romfs_read
0010b304 0000028c T romfsMountFromFile
0010b590 00000098 T romfsMountFromCurrentProcess
0010b628 00000260 T romfsMountSelf
0010b888 000000a0 T romfsUnmount
0010b928 00000074 T osConvertVirtToPhys
0010b99c 00000054 T osGetTimeRef
0010b9f0 000000ec T osGetTime
0010badc 00000034 T __ctru_speedup_config
0010bb10 00000094 T fontEnsureMapped
0010bba4 00000100 T fontGlyphIndexFromCodePoint
0010bca4 000001ec T fontCalcGlyphPos
0010be90 000000d0 t gfxPresentFramebuffer
0010bf60 0000001c T gfxIsWide
0010bf7c 000000ec T gfxSetScreenFormat
0010c068 000000e0 T gfxInit
0010c148 00000010 T gfxInitDefault
0010c158 000000b4 T gfxExit
0010c20c 000000a0 T gfxGetFramebuffer
0010c2ac 00000030 T gfxScreenSwapBuffers
0010c2dc 000001d4 T shaderInstanceInit
0010c4b0 00000018 T shaderInstanceGetUniformLocation
0010c4c8 0000001c T shaderProgramInit
0010c4e4 00000064 T shaderProgramFree
0010c548 00000080 T shaderProgramSetVsh
0010c5c8 000008e0 T shaderProgramConfigure
0010cea8 000001cc t DVLE_GenerateOutmap.part.0
0010d074 000001b4 T DVLB_ParseFile
0010d228 00000038 T DVLB_Free
0010d260 00000074 T DVLE_GetUniformRegister
0010d2d4 00000010 T GX_BindQueue
0010d2e4 00000078 T GX_ProcessCommandList
0010d35c 00000074 T GX_MemoryFill
0010d3d0 00000070 T GX_DisplayTransfer
0010d440 00000074 T GX_TextureCopy
0010d4b4 00000068 t gxCmdQueueDoCommands.part.0
0010d51c 000000c8 T gxCmdQueueInterrupt
0010d5e4 0000004c T gxCmdQueueClear
0010d630 000000f8 T gxCmdQueueAdd
0010d728 00000080 T gxCmdQueueRun
0010d7a8 00000060 T gxCmdQueueStop
0010d808 00000074 T gxCmdQueueWait
0010d87c 0000013c T GPUCMD_Add
0010d9b8 000000b0 T GPUCMD_Split
0010da68 00000034 T f32tof16
0010da9c 00000034 T f32tof24
0010dad0 00000038 T f32tof31
0010db08 00000c58 t gspHardwareInit
0010e760 00000248 T gspInit
0010e9a8 000000f0 T gspExit
0010ea98 00000010 T gspHasGpuRight
0010eaa8 000000a0 T gspPresentBuffer
0010eb48 00000030 T gspSetEventCallback
0010eb78 00000044 T gspWaitForEvent
0010ebbc 0000004c T gspWaitForAnyEvent
0010ec08 00000158 t gspEventThreadMain
0010ed60 00000130 T gspSubmitGxCommand
0010ee90 00000050 T GSPGPU_FlushDataCache
0010eee0 00000034 T GSPGPU_SetLcdForceBlack
0010ef14 00000068 T GSPGPU_AcquireRight
0010ef7c 00000048 T GSPGPU_ReleaseRight
0010efc4 0000007c T GSPGPU_ImportDisplayCaptureInfo
0010f040 0000002c T GSPGPU_SaveVramSysArea
0010f06c 0000002c T GSPGPU_RestoreVramSysArea
0010f098 000001a4 t aptConvertScreenForCapture
0010f23c 00000008 W aptDspSleep
0010f244 00000004 W aptDspWakeup
0010f248 00000004 W aptDspCancel
0010f24c 00000158 T aptSendCommand
0010f3a8 00000044 t aptExitProcess
0010f3ec 000002f4 T aptExit
0010f6e0 000000e0 T aptHandleSleep
0010f7c0 00000030 T aptHook
0010f7f0 00000030 T aptUnhook
0010f820 00000084 T APT_SleepIfShellClosed
0010f8a4 00000084 T aptSetSleepAllowed
0010f928 00000084 T APT_UnlockTransition
0010f9b0 000004a4 t aptEventHandler
0010fe54 000000b0 T APT_ReceiveParameter
0010ff04 000000b0 t aptReceiveParameter.constprop.0
0010ffb8 000002ac t aptScreenTransfer
00110264 00000344 t aptWaitForWakeUp.isra.0
001105a8 00000100 T aptJumpToHomeMenu
001106a8 00000048 T aptMainLoop
001106f0 0000022c T aptInit
0011091c 0000007c T APT_CheckNew3DS
00110998 00000048 T APT_GetSharedFont
001109e0 00000024 W hidShouldUseIrrst
00110a04 0000018c T hidInit
00110b90 000000e8 T hidExit
00110c78 000002a4 T hidScanInput
00110f1c 00000010 T hidKeysDown
00110f2c 00000018 T hidTouchRead
00110f44 00000074 T ptmSysmInit
00110fb8 0000003c T ptmSysmExit
00110ff4 00000034 T PTMSYSM_ConfigureNew3DSCPU
00111028 000000cc T fsInit
001110f4 0000003c T fsExit
00111130 00000060 T fsExemptFromSession
00111190 00000050 T fsUnexemptFromSession
001111e0 000000cc T FSUSER_OpenFile
001112ac 000000d4 T FSUSER_OpenFileDirectly
00111380 000000bc T FSUSER_DeleteFile
0011143c 000000f8 T FSUSER_RenameFile
00111534 000000bc T FSUSER_DeleteDirectory
001115f0 000000d4 T FSUSER_CreateFile
001116c4 000000c4 T FSUSER_CreateDirectory
00111788 000000f8 T FSUSER_RenameDirectory
00111880 000000b4 T FSUSER_OpenDirectory
00111934 00000098 T FSUSER_OpenArchive
001119cc 0000008c T FSUSER_CloseArchive
00111a58 00000074 T FSUSER_GetSdmcArchiveResource
00111acc 00000064 T FSUSER_IsSdmcWritable
00111b30 00000058 T FSFILE_Read
00111b88 00000060 T FSFILE_Write
00111be8 0000003c T FSFILE_GetSize
00111c24 00000028 T FSFILE_SetSize
00111c4c 0000003c T FSFILE_Close
00111c88 00000024 T FSFILE_Flush
00111cac 00000050 T FSDIR_Read
00111cfc 0000003c T FSDIR_Close
00111d38 000000c4 t buffer_read
00111dfc 000000d0 t iov_read
00111ecc 00000138 t iov_memmove
00112004 000001dc t decompress_rle
001121e0 00000244 t decompress_lzss
00112424 00000424 t decompress_lz11
00112848 000002d8 t decompress_huff
00112b20 00000010 T decompressCallback_Stdio
00112b30 000000dc T decompressHeader
00112c0c 00000240 T decompressV
00112e4c 00000010 T rbtree_init
00112e5c 000001b4 t do_insert
00113010 00000008 T rbtree_insert
00113018 00000090 T rbtree_rotate
001130a8 00000318 T rbtree_remove
001133c0 00000074 T rbtree_find
00113434 000000e8 T utf16_to_utf8
0011351c 00000064 T decode_utf16
00113580 0000013c T decode_utf8
001136bc 000000c0 T utf8_to_utf16
00113780 000001e0 W __system_allocateHeaps
00113960 00000038 W __libctru_init
00113998 00000170 W __system_initArgv
00113b08 T svcControlMemory
00113b28 T svcQueryMemory
00113b58 T svcExitProcess
00113b60 T svcCreateThread
00113b80 T svcExitThread
00113b88 T svcSleepThread
00113b90 T svcReleaseMutex
00113b98 T svcCreateEvent
00113bac T svcSignalEvent
00113bb4 T svcClearEvent
00113bbc T svcMapMemoryBlock
00113bc4 T svcUnmapMemoryBlock
00113bcc T svcCreateAddressArbiter
00113be0 T svcArbitrateAddressNoTimeout
00113be8 T svcCloseHandle
00113bf0 T svcWaitSynchronization
00113bf8 T svcWaitSynchronizationN
00113c20 T svcDuplicateHandle
00113c34 T svcGetSystemTick
00113c3c T svcConnectToPort
00113c50 T svcSendSyncRequest
00113c58 T svcGetResourceLimit
00113c6c T svcGetResourceLimitLimitValues
00113c74 T svcGetResourceLimitCurrentValues
00113c7c T svcBreak
00113c84 W initSystem
00113cd4 W __ctru_exit
00113cec T __aeabi_read_tp
00113cf8 0000000c T __sync_init
00113d04 00000018 T __sync_fini
00113d1c 0000002c T syncArbitrateAddress
00113d48 000000b0 T LightLock_Lock
00113df8 00000040 T LightLock_Unlock
00113e38 00000024 T RecursiveLock_Init
00113e5c 00000030 T RecursiveLock_Lock
00113e8c 00000054 T RecursiveLock_Unlock
00113ee0 00000040 T LightEvent_Init
00113f20 000000a4 T LightEvent_Clear
00113fc4 000000c8 T LightEvent_Signal
0011408c 00000050 T LightEvent_TryWait
001140dc 000000b0 T LightEvent_Wait
0011418c 00000084 W envGetHandle
00114210 00000050 W envDestroyHandles
00114260 00000130 T srvInit
00114390 00000058 T srvExit
001143e8 000000a0 T srvGetServiceHandleDirect
00114488 00000038 T srvGetServiceHandle
001144c0 00000038 T srvPublishToSubscriber
001144f8 00000178 T threadCreate
00114670 0000002c T threadFree
0011469c 00000024 T threadJoin
001146c0 00000030 T threadGetCurrent
001146f0 00000040 T threadExit
00114730 00000020 t _thread_begin
00114750 000000b4 t mappableFindAddressWithin
00114804 00000028 T mappableInit
0011482c 00000080 T mappableAlloc
001148ac 00000004 T mappableFree
001148b0 00000164 T irrstInit
00114a14 000000cc T irrstExit
00114ae0 000000b4 T irrstScanInput
00114b94 00000024 T irrstKeysHeld
00114bb8 0000000c T srvPmGetSessionHandle
00114bc4 0000005c T rbtree_node_next
00114c20 00000054 T encode_utf16
00114c74 000000e0 T encode_utf8
00114d54 00000030 W __appInit
00114d84 00000030 T __syscall_getreent
00114db4 00000074 T __syscall_gettod_r
00114e28 00000004 T __syscall_lock_acquire
00114e2c 00000004 T __syscall_lock_release
00114e30 00000004 T __syscall_lock_init_recursive
00114e34 00000004 T __syscall_lock_acquire_recursive
00114e38 00000004 T __syscall_lock_release_recursive
00114e3c 00000004 T __syscall_exit
00114e40 00000050 T initThreadVars
00114e90 00000068 T __system_initSyscalls
00114ef8 00000030 W __appExit
00114f28 00000090 W __libctru_exit
00114fb8 00000014 t archive_link
00114fcc 00000014 t archive_dirreset
00114fe0 00000014 t archive_chmod
00114ff4 00000024 t error_cmp
00115018 00000050 t archive_translate_error
00115068 000000c8 t archive_seek
00115130 0000007c t _archiveInit.part.0
001151ac 000000c4 t archiveFindDevice.part.0
00115270 0000025c t archive_utf16path
001154cc 000000a0 t _archiveUnmountDeviceStruct.part.0
0011556c 00000014 t archive_fchmod
00115580 00000014 t archive_statvfs
00115594 00000164 t _archiveMountDevice
001156f8 000000e8 t archive_diropen
001157e0 000000a4 t archive_fstat
00115884 0000006c t archive_close
001158f0 0000006c t archive_fsync
0011595c 00000070 t archive_dirclose
001159cc 000000e8 t sdmc_statvfs
00115ab4 000000ec t archive_chdir
00115ba0 0000007c t archive_ftruncate
00115c1c 000000ac t archive_read
00115cc8 000000a4 t archive_unlink
00115d6c 000000bc t archive_rmdir
00115e28 000000dc t archive_mkdir
00115f04 0000019c t archive_stat
001160a0 0000015c t archive_dirnext
001161fc 000000ec t archive_write
001162e8 000001d4 t archive_open
001164bc 00000278 t archive_rename
00116734 0000019c T archiveMountSdmc
001168d0 00000054 T archiveUnmountAll
00116924 00000004 T operator delete(void*)
00116928 0000005c T operator new(unsigned int)
00116984 0000002c T std::__throw_bad_alloc()
001169b0 0000002c T std::__throw_bad_array_new_length()
001169dc 00000040 T std::__throw_logic_error(char const*)
00116a1c 00000040 T std::__throw_length_error(char const*)
00116a5c 0000000c T std::bad_alloc::what() const
00116a68 00000020 T std::bad_alloc::~bad_alloc()
00116a68 00000020 T std::bad_alloc::~bad_alloc()
00116a88 0000002c T std::bad_alloc::~bad_alloc()
00116ab4 0000000c T std::bad_array_new_length::what() const
00116ac0 00000020 T std::bad_array_new_length::~bad_array_new_length()
00116ac0 00000020 T std::bad_array_new_length::~bad_array_new_length()
00116ae0 0000002c T std::bad_array_new_length::~bad_array_new_length()
00116b0c 00000004 T operator delete(void*, unsigned int)
00116b10 000000c8 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00116bd8 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00116c70 00000044 T __cxa_allocate_exception
00116cb4 00000030 T __cxa_free_exception
00116ce4 0000003c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00116d20 T __cxa_end_cleanup
00116d30 0000012c T __cxa_type_match
00116e5c 000000b4 T __cxa_begin_cleanup
00116f10 000000b4 T __gnu_end_cleanup
00116fc4 00000004 T std::exception::~exception()
00116fc4 00000004 T std::exception::~exception()
00116fc8 00000004 T std::bad_exception::~bad_exception()
00116fc8 00000004 T std::bad_exception::~bad_exception()
00116fcc 0000000c T transaction clone for std::bad_exception::what() const
00116fcc 0000000c T std::bad_exception::what() const
00116fd8 00000018 T std::bad_exception::~bad_exception()
00116ff0 0000000c T __cxa_get_globals_fast
00116ffc 0000000c T __cxa_get_globals
00117008 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00117174 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
001171cc 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
001172a4 000006c8 T __gxx_personality_v0
0011796c 00000014 T __cxxabiv1::__terminate(void (*)())
00117980 00000018 T std::terminate()
00117998 0000000c T __cxxabiv1::__unexpected(void (*)())
001179a4 00000018 T std::unexpected()
001179bc 00000014 T std::get_terminate()
001179d0 00000014 T std::get_unexpected()
001179e4 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00117a44 00000058 T __cxa_init_primary_exception
00117a9c 00000054 T __cxa_throw
00117af0 000000b0 T __cxa_rethrow
00117ba0 00000014 T std::get_new_handler()
00117bb4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00117bb4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00117bd4 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00117c00 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00117c6c 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00117d48 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00117d8c 00000004 T std::type_info::~type_info()
00117d8c 00000004 T std::type_info::~type_info()
00117d90 00000008 T std::type_info::__is_pointer_p() const
00117d90 00000008 T std::type_info::__is_function_p() const
00117d98 0000004c T std::type_info::__equal(std::type_info const&) const
00117d98 0000004c T std::type_info::operator==(std::type_info const&) const
00117de4 00000008 T std::logic_error::what() const
00117de4 00000008 T std::runtime_error::what() const
00117dec 00000064 T std::logic_error::~logic_error()
00117dec 00000064 T std::logic_error::~logic_error()
00117e50 00000064 T std::length_error::~length_error()
00117e50 00000064 T std::length_error::~length_error()
00117eb4 0000006c T std::logic_error::~logic_error()
00117f20 0000006c T std::length_error::~length_error()
00117f8c 000000d4 T std::logic_error::logic_error(char const*)
00117f8c 000000d4 T std::logic_error::logic_error(char const*)
00118060 00000020 T std::length_error::length_error(char const*)
00118060 00000020 T std::length_error::length_error(char const*)
00118080 0000008c W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0011810c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00118110 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0011816c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00118180 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00118180 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001181a0 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
001181cc 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00118234 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00118260 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
001182a4 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
00118314 0000002c T __cxa_call_terminate
00118340 00000138 T __cxa_call_unexpected
00118478 000000cc T __cxa_begin_catch
00118544 000000e0 T __cxa_end_catch
00118628 0000022c T cosf
00118854 00000024 t with_errnof
00118878 0000001c T __math_invalidf
00118894 000000b8 T ceilf
00118950 0000024c T sinf
00118b9c 00000120 T __udivmoddi4
00118cbc 00000018 t selfrel_offset31
00118cd4 00000090 t search_EIT_table
00118d64 00000040 t __gnu_unwind_get_pr_addr
00118da4 000000f4 t get_eit_entry
00118e98 00000088 t restore_non_core_regs
00118f20 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
00118f34 00000004 t _Unwind_DebugHook
00118f38 00000064 t unwind_phase2
00118f9c 00000140 t unwind_phase2_forced
001190dc 000000a4 T __gnu_Unwind_RaiseException
00119180 00000028 T __gnu_Unwind_ForcedUnwind
001191a8 00000074 T __gnu_Unwind_Resume
0011921c 00000020 T __gnu_Unwind_Resume_or_Rethrow
0011923c 00000004 T _Unwind_Complete
00119240 00000018 T _Unwind_DeleteException
00119258 0000005c T _Unwind_VRS_Get
001192b4 0000002c t _Unwind_GetGR
001192e0 0000005c T _Unwind_VRS_Set
0011933c 0000002c t _Unwind_SetGR
00119368 000000c0 T __gnu_Unwind_Backtrace
00119428 00000414 t __gnu_unwind_pr_common
0011983c 00000008 T __aeabi_unwind_cpp_pr0
00119844 00000008 W __aeabi_unwind_cpp_pr1
0011984c 00000008 W __aeabi_unwind_cpp_pr2
00119854 000003dc T _Unwind_VRS_Pop
00119c30 00000064 t next_unwind_byte
00119c94 0000002c t _Unwind_GetGR.constprop.0
00119cc0 00000004 t unwind_UCB_from_context
00119cc4 00000418 T __gnu_unwind_execute
0011a0dc 00000048 T __gnu_unwind_frame
0011a124 00000010 T _Unwind_GetRegionStart
0011a134 0000001c T _Unwind_GetLanguageSpecificData
0011a150 00000008 T _Unwind_GetDataRelBase
0011a158 00000008 T _Unwind_GetTextRelBase
0011a160 00000014 T abort
0011a174 00000078 T bsearch
0011a1ec 00000020 T calloc
0011a20c 000000c0 T _calloc_r
0011a2cc 0000000c T __errno
0011a2d8 00000034 T exit
0011a30c 0000015c T _fclose_r
0011a468 00000018 T fclose
0011a480 00000234 T __sflush_r
0011a6b4 00000094 T _fflush_r
0011a748 00000038 T fflush
0011a780 0000000c T _cleanup_r
0011a78c 00000184 T __sinit
0011a910 00000134 T __sfp
0011aa44 0000000c T __sfp_lock_acquire
0011aa50 0000000c T __sfp_lock_release
0011aa5c 0000003c T __libc_fini_array
0011aa98 00000134 T _fopen_r
0011abcc 00000020 T fopen
0011abec 000002d0 T _fread_r
0011aebc 00000038 T fread
0011aef4 000000f8 T _malloc_trim_r
0011afec 000002e8 T _free_r
0011b2d4 0000001c T _fseek_r
0011b2f0 00000590 T _fseeko_r
0011b880 00000068 T _fwalk
0011b8e8 00000070 T _fwalk_reent
0011b958 00000084 T __libc_init_array
0011b9dc 00000054 T itoa
0011ba30 00000138 T __smakebuf_r
0011bb68 0000008c T __swhatbuf_r
0011bbf4 00000020 T memalign
0011bc14 0000014c T _memalign_r
0011bd60 00000018 T malloc
0011bd78 00000018 T free
0011bd90 000007e4 T _malloc_r
0011c574 000000b0 T memcmp
0011c624 00000118 T memcpy
0011c73c 00000150 T memmove
0011c88c 000000f4 T memset
0011c980 0000000c T __malloc_lock
0011c98c 0000000c T __malloc_unlock
0011c998 00000a04 T qsort
0011d39c 0000001c T srand
0011d3b8 00000044 T rand
0011d3fc 0000001c t lflush
0011d418 00000198 T __srefill_r
0011d5b0 0000025c T setvbuf
0011d80c 00000090 T _raise_r
0011d89c 00000018 T raise
0011d8b4 00000044 T __sread
0011d8f8 00000068 T __swrite
0011d960 00000044 T __sseek
0011d9a4 00000008 T __sclose
0011d9ac 00000130 T strchr
0011dadc 0000005c T strlen
0011db38 000000e4 T strncat
0011dc1c 000000e4 T strncmp
0011dd00 000000c4 T strncpy
0011ddc4 00000048 T strnlen
0011de0c 000001c4 t _strtoul_l.constprop.0
0011dfd0 00000028 T strtoul
0011dff8 00000020 T gettimeofday
0011e018 0000003c T time
0011e054 000000e4 T __utoa
0011e138 00000114 T __call_exitprocs
0011e24c 000000c8 T __sflags
0011e314 00000008 t null_write
0011e31c 00000018 T setDefaultDevice
0011e334 000000c8 T FindDevice
0011e3fc 00000028 T RemoveDevice
0011e424 0000009c T AddDevice
0011e4c0 00000020 T GetDeviceOpTab
0011e4e0 00000078 T _fstat_r
0011e558 00000014 T _getpid_r
0011e56c 00000030 T _gettimeofday_r
0011e59c 00000008 T _isatty_r
0011e5a4 00000014 T _kill_r
0011e5b8 00000084 T _lseek_r
0011e63c 000000c0 T _open_r
0011e6fc 00000080 T _read_r
0011e77c 00000078 T _sbrk_r
0011e7f4 00000080 T _write_r
0011e874 00000020 T _exit
0011e894 000001a4 T _concatenate_path
0011ea38 00000140 T chdir
0011eb78 00000008 T __flockfile
0011eb80 00000008 T __funlockfile
0011eb88 0000008c T __release_handle
0011ec14 000000b0 T __alloc_handle
0011ecc4 0000003c T __get_handle
0011ed00 000000f4 T _close_r
0011edf4 0000002c T __getreent
0011ee20 0000001c T __libc_lock_acquire
0011ee3c 0000001c T __libc_lock_release
0011ee58 0000001c T __libc_lock_init_recursive
0011ee74 0000001c T __libc_lock_acquire_recursive
0011ee90 0000001c T __libc_lock_release_recursive
0011eeac 0000001c T __libc_lock_close_recursive
0011eec8 00000048 T strrchr
0011ef10 T _fini
0011f0e0 00000008 r s_defaultTint.0
0011f0ec R render2d_shbin
0011f278 R render2d_shbin_end
0011f278 R render2d_shbin_size
0011f27c 00000038 r CSWTCH.19
0011f2b4 00000005 r colorFmtSizes
0011f2bc 00000004 r depthFmtSizes
0011f2c0 00000010 r CSWTCH.9
0011f2f4 00000070 r romFS_devoptab
0011f388 00000008 r morton_y.2
0011f390 00000008 r morton_x.3
0011f398 00000008 r s_sleepWakeEvents.4
0011f3fc 00000030 r error_table
0011f434 00000070 r archive_devoptab
0011f4b4 0000000d R typeinfo name for std::bad_alloc
0011f4c4 0000000c R typeinfo for std::bad_alloc
0011f4d0 00000014 R vtable for std::bad_alloc
0011f500 00000019 R typeinfo name for std::bad_array_new_length
0011f51c 0000000c R typeinfo for std::bad_array_new_length
0011f528 00000014 R vtable for std::bad_array_new_length
0011f550 0000000d R typeinfo name for std::exception
0011f560 00000008 R typeinfo for std::exception
0011f568 00000012 R typeinfo name for std::bad_exception
0011f57c 0000000c R typeinfo for std::bad_exception
0011f588 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0011f5a8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0011f5b0 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0011f5d4 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0011f5dc 00000014 R vtable for std::bad_exception
0011f5f0 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0011f618 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0011f624 0000002c R vtable for __cxxabiv1::__si_class_type_info
0011f650 0000000d R typeinfo name for std::type_info
0011f660 00000008 R typeinfo for std::type_info
0011f668 00000010 R typeinfo name for std::logic_error
0011f678 0000000c R typeinfo for std::logic_error
0011f684 00000011 R typeinfo name for std::length_error
0011f698 0000000c R typeinfo for std::length_error
0011f6a4 00000014 R vtable for std::logic_error
0011f6b8 00000014 R vtable for std::length_error
0011f710 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0011f734 0000000c R typeinfo for __cxxabiv1::__class_type_info
0011f740 0000002c R vtable for __cxxabiv1::__class_type_info
0011f76c 00000060 R __inv_pio4
0011f7d0 000000e0 R __sincosf_table
0011f8b0 00000004 R _global_impure_ptr
0011f8dc 00000101 R _ctype_
0011f9e0 00000070 R dotab_stdnull
0011fa50 R __tdata_align
0011fa54 r 
0011fb00 R __exidx_start
0011fc90 R __exidx_end
00120000 00000004 D menuBarColor
00120004 00000004 D highlightedMenuBarColor
00120008 00000004 D clrClear
0012000c 00000004 D ScrollBackgroundColor
00120010 00000004 D GRID_SIZE
00120014 00000004 D gameSpeed
00120018 00000004 D toggledColor
0012001c 00000004 D sprite
00120020 00000004 D wallColor
00120024 00000004 D snakeColor
00120028 00000004 D enemyColor
0012002c 00000004 d framerate
00120030 00000008 d framerateCounter
00120038 00000004 d queueLock
0012003c 00000004 d kCount
00120040 00000004 d kInterval
00120044 00000004 d kDelay
00120048 W __stacksize__
0012004c 00000004 D __cxxabiv1::__unexpected_handler
00120050 00000004 D __cxxabiv1::__terminate_handler
00120054 00000004 D _impure_ptr
00120058 00000460 d impure_data
001204b8 00000004 D __malloc_sbrk_base
001204bc 00000004 D __malloc_trim_threshold
001204c0 00000408 D __malloc_av_
001208c8 0000008c D devoptab_list
00120954 00000004 d defaultDevice
00120958 00000400 d _current_working_directory
00120d58 00001000 d handles
00121d58 0000000c d __stderr_handle
00121d64 0000000c d __stdout_handle
00121d70 0000000c d __stdin_handle
00121d84 d _GLOBAL_OFFSET_TABLE_
00121d90 d __frame_dummy_init_array_entry
00121d90 D __init_array_start
00121d90 B __preinit_array_end
00121d90 B __preinit_array_start
00121d90 D __tdata_lma
00121d90 D __tdata_lma_end
00121d9c d __do_global_dtors_aux_fini_array_entry
00121d9c D __fini_array_start
00121d9c D __init_array_end
00121da4 D __bss_start__
00121da4 D __fini_array_end
00121da8 00000004 b spriteSheet
00121dac 000001b8 b sprites
00121f64 00000004 B g_staticBuf
00121f68 00000004 B g_dynamicBuf
00121f6c 000000a8 B myText
00122014 00000004 B touch
00122018 00000008 B lastPos
00122020 00000014 b goBackBox
00122034 0000000c B score
00122040 00000001 B isTheWallModeOn
00122041 00000001 B isSimpleGraphicsSet
00122044 0000000c B snakeBodyPos
00122050 00000008 B enemyPos
00122058 00000004 B snakeHeading
0012205c 00000001 B isGameOver
00122060 00000008 B waitBuffer
00122068 00000004 B snakeHeadingBuffer
0012206c 00000014 b menuBar1
00122080 00000014 b menuBar2
00122094 00000014 b menuBar3
001220a8 00000010 B begin
001220b8 00000010 B end
001220c8 b completed.1
001220cc b object.0
001220e8 000005a8 B __C2Di_Context
00122690 00000040 b s_projBot
001226d0 00000040 b s_projTop
00122710 00000004 b uLoc_mdlvMtx
00122714 00000004 b uLoc_projMtx
00122718 00000004 b s_glyphSheets
0012271c 00000004 b s_textScale
00122720 000002d0 B __C3D_Context
001229f0 0000000c b hookCookie
00122a00 00000010 b cpuTime
00122a10 00000004 b firstTarget
00122a14 00000008 b frameCounter
00122a1c 00000004 b frameEndCb
00122a20 00000004 b frameEndCbData
00122a28 00000010 b gpuTime
00122a38 00000001 b inFrame
00122a39 00000001 b inSafeTransfer
00122a3a 00000001 b isTopStereo
00122a3c 00000004 b lastTarget
00122a40 0000000c b linkedTarget
00122a4c 00000001 b measureGpuTime
00122a4d 00000001 b needSwapBot
00122a4e 00000001 b needSwapTop
00122a50 00000004 B C3D_BoolUnifs
00122a54 00000002 B C3D_BoolUnifsDirty
00122a58 00000c00 B C3D_FVUnif
00123658 000000c0 B C3D_FVUnifDirty
00123718 00000020 B C3D_IVUnif
00123738 00000008 B C3D_IVUnifDirty
00123740 000000c0 b C3Di_FVUnifEverDirty
00123800 00000008 b C3Di_IVUnifEverDirty
00123808 00000018 b C3Di_ShaderFVecData
00123820 00000008 b sVramPoolB
00123828 00000008 b sVramPoolA
00123830 0000000c b sAddrMap
00123840 00000008 b sLinearPool
00123848 0000000c b sAddrMap
00123854 00000004 b romfs_mount_list
00123858 00000004 V __romfs_path
0012385c 00000001 V __ctru_speedup
00123860 00000004 b sharedFontAddr
00123864 00000004 B g_sharedFont
00123868 00000004 b screenAlloc
0012386c 00000004 b screenFree
00123870 00000002 b gfxIsDoubleBuf
00123874 00000002 b gfxCurBuf
00123876 00000001 b gfxIsVram
00123877 00000001 b gfxTopMode
00123878 00000002 b gfxFramebufferFormats
0012387c 00000004 b gfxBottomFramebufferMaxSize
00123880 00000004 b gfxTopFramebufferMaxSize
00123888 00000008 b gfxBottomFramebuffers
00123890 00000008 b gfxTopFramebuffers
00123898 00000004 b boundQueue
0012389c 00000001 b shouldStop
0012389d 00000001 b isRunning
0012389e 00000001 b isActive
001238a0 00000004 b curQueue
001238a4 00000004 B gpuCmdBufOffset
001238a8 00000004 B gpuCmdBufSize
001238ac 00000004 B gpuCmdBuf
001238b0 00000007 b gspEventCbOneShot
001238b8 0000001c b gspEventCbData
001238d4 0000001c b gspEventCb
001238f0 00000038 b gspEvents
00123928 00000004 b gspLastEvent
0012392c 00000001 b gspRunEvents
00123930 00000004 b gspEventThread
00123934 00000004 b gspEvent
00123938 00000001 b gspGpuRight
00123939 00000001 b gspThreadId
0012393c 00000004 b gspSharedMem
00123940 00000004 b gspSharedMemHandle
00123944 00000004 b gspRefCount
00123948 00000004 b gspGpuHandle
0012394c 00000001 b flagValue.0
0012394d 00000001 b flagInit.1
00123950 00000004 b serviceName.6
00123954 00000001 b aptChainloadMediatype
00123958 00000008 b aptChainloadTid
00123960 00000001 b aptChainloadFlags
00123964 00001000 b aptParameters
00124964 00000004 b aptFlags
00124968 00000001 b aptHomeButtonState
0012496c 00000004 b aptMessageFuncData
00124970 00000004 b aptMessageFunc
00124974 0000000c b aptFirstHook
00124980 00000001 b aptEventHandlerThreadQuit
00124984 00000004 b aptEventHandlerThread
00124988 00000008 b aptSleepEvent
00124990 00000008 b aptReceiveEvent
00124998 00000008 b aptEvents
001249a0 00000004 b aptLockHandle
001249a4 00000004 b aptRefCount
001249a8 00000001 b usingIrrst
001249ac 00000004 b hidRefCount
001249b0 00000006 b gRate
001249b8 00000006 b aVec
001249c0 00000004 b cPos
001249c4 00000004 b tPos
001249c8 00000004 b kRepeat
001249cc 00000004 b kUp
001249d0 00000004 b kDown
001249d4 00000004 b kHeld
001249d8 00000004 b kOld
001249dc 00000004 B hidSharedMem
001249e0 00000014 B hidEvents
001249f4 00000004 B hidMemHandle
001249f8 00000004 B hidHandle
001249fc 00000004 b ptmSysmRefCount
00124a00 00000004 b ptmSysmHandle
00124a08 00000080 b fsExemptArchives
00124a88 00000004 b fsuRefCount
00124a8c 00000004 b fsuHandle
00124a90 00000004 V __ctru_linear_heap_size
00124a94 00000004 V __ctru_heap_size
00124a98 00000004 B __ctru_linear_heap
00124a9c 00000004 B __ctru_heap
00124aa0 00000004 B __system_retAddr
00124aa4 00000004 B __system_argv
00124aa8 00000004 B __system_argc
00124aac b saved_stack
00124ab4 00000004 b arbiter
00124ab8 00000004 B __3dslink_host
00124abc 00000004 b srvRefCount
00124ac0 00000004 b srvHandle
00124ac4 00000004 b currentAddr
00124ac8 00000004 b maxAddr
00124acc 00000004 b minAddr
00124ad0 00000004 b irrstRefCount
00124ad4 00000004 b csPos
00124ad8 00000004 b kHeld
00124adc 00000004 B irrstSharedMem
00124ae0 00000004 B irrstEvent
00124ae4 00000004 B irrstMemHandle
00124ae8 00000004 B irrstHandle
00124aec 00000004 b srvPmHandle
00124af0 00000540 b archive_devices
00125030 00000004 b archive_device_cwd
00125034 00000001 b archive_initialized
00125038 00000010 b (anonymous namespace)::emergency_pool
00125048 0000000c b eh_globals
00125054 00000004 b (anonymous namespace)::__new_handler
00125058 00000010 V std::string::_Rep::_S_empty_rep_storage
00125068 0000000c b __sinit_recursive_mutex
00125074 0000000c b __sfp_recursive_mutex
00125080 00000028 B __malloc_current_mallinfo
001250a8 00000004 B __malloc_max_total_mem
001250ac 00000004 B __malloc_max_sbrked_mem
001250b0 00000004 B __malloc_top_pad
001250b4 0000000c b __malloc_recursive_mutex
001250c0 0000000c B __atexit_recursive_mutex
001250cc 00000004 b heap_start.0
001250d0 00000004 B fake_heap_start
001250d4 00000004 B fake_heap_end
001250d8 00000400 b temp_cwd
001254d8 00000004 b __hndl_lock
001254dc B __tls_start
001260e4 B __bss_end__
001260e4 A __end__
001260e4 B __tls_end
